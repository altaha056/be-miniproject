// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	contents "antonio/features/contents"

	mock "github.com/stretchr/testify/mock"
)

// Business is an autogenerated mock type for the Business type
type Business struct {
	mock.Mock
}

// CreateArticle provides a mock function with given fields: data, userId
func (_m *Business) CreateArticle(data contents.Core, userId int) error {
	ret := _m.Called(data, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(contents.Core, int) error); ok {
		r0 = rf(data, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteArticleById provides a mock function with given fields: articleId, userId
func (_m *Business) DeleteArticleById(articleId int, userId int) error {
	ret := _m.Called(articleId, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(articleId, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllArticles provides a mock function with given fields:
func (_m *Business) GetAllArticles() ([]contents.Core, error) {
	ret := _m.Called()

	var r0 []contents.Core
	if rf, ok := ret.Get(0).(func() []contents.Core); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]contents.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllUserArticles provides a mock function with given fields: userId
func (_m *Business) GetAllUserArticles(userId int) ([]contents.Core, error) {
	ret := _m.Called(userId)

	var r0 []contents.Core
	if rf, ok := ret.Get(0).(func(int) []contents.Core); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]contents.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetArticleById provides a mock function with given fields: articleId
func (_m *Business) GetArticleById(articleId int) (contents.Core, error) {
	ret := _m.Called(articleId)

	var r0 contents.Core
	if rf, ok := ret.Get(0).(func(int) contents.Core); ok {
		r0 = rf(articleId)
	} else {
		r0 = ret.Get(0).(contents.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(articleId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateArticleById provides a mock function with given fields: articleId, data, userId
func (_m *Business) UpdateArticleById(articleId int, data contents.Core, userId int) error {
	ret := _m.Called(articleId, data, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, contents.Core, int) error); ok {
		r0 = rf(articleId, data, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
